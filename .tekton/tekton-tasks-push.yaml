apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/avi-biton/task-test?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch
      == "main"
  labels:
    appstudio.openshift.io/application: tasks
    appstudio.openshift.io/component: tekton-tasks
    pipelines.appstudio.openshift.io/type: build
  name: tekton-tasks-on-pull-request-push-example
  namespace: user-ns2
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: e2e_test_namespace
      value: build-templates-e2e
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: e2e_test_namespace
    workspaces:
      - name: workspace
    tasks:
      - name: fetch-repository
        params:
        - name: url
          value: $(params.repo_url)
        - name: revision
          value: $(params.revision)
        - name: depth
          value: "0"
        taskRef:
          params:
          - name: name
            value: git-clone
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:d091a9e19567a4cbdc5acd57903c71ba71dc51d749a4ba7477e689608851e981
          - name: kind
            value: task
          resolver: bundles
        workspaces:
        - name: output
          workspace: workspace
      - name: build-utils
        runAfter:
          - fetch-repository
        params:
          - name: IMAGE
            value: quay.io/avi_test/user-ns2/release-catalog:utils-{{revision}}
          - name: CONTEXT
            value: utils
        taskRef:
          params:
          - name: name
            value: buildah
          - name: bundle
            value: quay.io/redhat-appstudio-tekton-catalog/task-buildah:0.2@sha256:808be6da05864bf123a3cdaaab72701d08b27032804ed8df65e86ca0949e417c
          - name: kind
            value: task
          resolver: bundles
        workspaces:
          - name: source
            workspace: workspace
      - name: build-bundles
        runAfter:
          - build-utils
        params:
          - name: revision
            value: "{{ revision }}"
          - name: e2e_test_namespace
            value: $(params.e2e_test_namespace)
        workspaces:
          - name: source
            workspace: workspace
        taskSpec:
          params:
            - name: revision
              type: string
            - name: e2e_test_namespace
              type: string
          steps:
            - name: build-bundles
              runAfter: 
                - build-utils                          
              image: quay.io/avi_test/user-ns2/release-catalog:utils-{{revision}}
              workingDir: $(workspaces.source.path)/source
              command: ["./hack/build-and-push.sh"]
              env:
                - name: QUAY_NAMESPACE
                  value: avi_test/user-ns2/release-catalog
                - name: BUILD_TAG
                  value: "$(params.revision)"
                - name: SKIP_BUILD
                  value: "1"
                - name: SKIP_INSTALL
                  value: "1"
                - name: OUTPUT_TASK_BUNDLE_LIST
                  value: $(workspaces.source.path)/task-bundle-list
            - name: update-trusted-tasks
              image: quay.io/avi_test/user-ns2/release-catalog:utils-{{revision}}
              workingDir: $(workspaces.source.path)/source
              command: ["./hack/trusted-tasks-update.sh"]
              env:
                - name: INPUT_IMAGE
                  value: quay.io/avi_test/user-ns2/release-catalog/data-acceptable-bundles:latest
                - name: OUTPUT_IMAGE
                  value: quay.io/avi_test/user-ns2/release-catalog/data-acceptable-bundles:latest
                - name: GIT_REPOSITORY
                  value: git+https://github.com/avi-biton/task-test            
              # - name: GIT_URL
              #   value: "$(params.repo_url)"
              # - name: GITHUB_TOKEN
              #   valueFrom:
              #     secretKeyRef:
              #       name: "{{ git_auth_secret }}"
              #       key: "git-provider-token"
              
              #   #!/bin/bash
              #   set -euo pipefail
              #   set -ex
              #   DATA_BUNDLE_REPO=quay.io/avi_test/user-ns2/release-catalog/data-acceptable-bundles
              #   DATA_BUNDLE_TAG=$(date '+%s')
              #   export DATA_BUNDLE_REPO DATA_BUNDLE_TAG

              #   list=()
              #   for f in "$@"; do
              #     [[ -f "$f" ]] && list+=("$f")
              #   done

              #   ./hack/build-acceptable-bundles.sh "${list[@]}"

              #   echo -n "${DATA_BUNDLE_TAG}" > acceptable_bundle_tag
              # args:
              #   - $(workspaces.source.path)/task-bundle-list
          workspaces:
            - name: source
    workspaces:
    - name: workspace
  taskRunTemplate: {}
  timeouts:
    pipeline: "2h"
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi

